name: 'Netlify Deploy'
description: 'Deploy to Netlify by Netlify-cli'
inputs:
  NETLIFY_AUTH_TOKEN:
    description: 'Auth token of Netlify'
    required: true
  NETLIFY_SITE_ID:
    description: "Site ID of your website in Netlify"
    required: true
  deploy_dir:
    description: "Build output folder path"
    required: false
    default: "./dist"
  production:
    description: "Deploy production mode"
    required: false
  node:
    description: "Node version"
    required: false
    default: "14"
  build_command:
    description: "Build command"
    required: false
    default: "yarn build"
  install_command:
    description: "Install command"
    required: false
    default: "yarn --check-files --frozen-lockfile --non-interactive"
  cache_path:
    description: "Paths for cache"
    required: false
    default: node_modules
  cache_strategy:
    description: "yarn, npm, or pnpm"
    required: false
    default: yarn
  lock_file:
    description: "Path of your lock file"
    required: false
    default: "/yarn.lock"
  
runs:
  using: "composite"
  steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: set up node.js v${{ inputs.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node }}
        cache: ${{ inputs.cache_strategy }}

    - name: cache node_modules
      uses: actions/cache@v2
      with:
        path: inputs.cache_path
        key: node-v${{ inputs.node }}-${{ hashFiles(format('{0}{1}', github.workspace, '${{ inputs.lock_file }}')) }}

    - name: install dependencies
      run: ${{ inputs.install_command }}
      shell: bash

    - name: build
      run: ${{ inputs.build_command }}
      shell: bash

    - name: install netlify-cli
      run: yarn global add netlify-cli
      shell: bash

    - name: deploy to production mode
      if: inputs.production == true
      env:
        NETLIFY_AUTH_TOKEN: ${{ inputs.NETLIFY_AUTH_TOKEN}}
        NETLIFY_SITE_ID: ${{ inputs.NETLIFY_SITE_ID}}
      run: netlify deploy --dir=${{ inputs.deploy_dir }} -p
      shell: bash

    - name: deploy to preview mode
      if: inputs.production != true
      id: deploy_preview
      env:
        NETLIFY_AUTH_TOKEN: ${{ inputs.NETLIFY_AUTH_TOKEN}}
        NETLIFY_SITE_ID: ${{ inputs.NETLIFY_SITE_ID}}
      run: |
        COMMAND="netlify deploy --dir=${{ inputs.deploy_dir }}"
        OUTPUT=$(sh -c "$COMMAND")
        NETLIFY_OUTPUT=$(echo "$OUTPUT")
        NETLIFY_PREVIEW_URL=$(echo "$OUTPUT" | grep -Eo '(http|https)://[a-zA-Z0-9./?=_-]*(--)[a-zA-Z0-9./?=_-]*')
        NETLIFY_LOGS_URL=$(echo "$OUTPUT" | grep -Eo '(http|https)://app.netlify.com/[a-zA-Z0-9./?=_-]*')
        NETLIFY_LIVE_URL=$(echo "$OUTPUT" | grep -Eo '(http|https)://[a-zA-Z0-9./?=_-]*' | grep -Eov "netlify.com")
        echo "::set-output name=NETLIFY_OUTPUT::$NETLIFY_OUTPUT"
        echo "::set-output name=NETLIFY_PREVIEW_URL::$NETLIFY_PREVIEW_URL"
        echo "::set-output name=NETLIFY_LOGS_URL::$NETLIFY_LOGS_URL"
        echo "::set-output name=NETLIFY_LIVE_URL::$NETLIFY_LIVE_URL"
      shell: bash

    - name: find the comment
      if: inputs.production != true
      uses: peter-evans/find-comment@v1
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Netlify Preview Deployment Information

    - name: create or update comment
      if: inputs.production != true
      uses: peter-evans/create-or-update-comment@v1
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Netlify Preview Deployment Information
          - Log URL: ${{ steps.deploy_preview.outputs.NETLIFY_LOGS_URL }}
          - Preview URL: ${{ steps.deploy_preview.outputs.NETLIFY_PREVIEW_URL }}
        edit-mode: replace
    